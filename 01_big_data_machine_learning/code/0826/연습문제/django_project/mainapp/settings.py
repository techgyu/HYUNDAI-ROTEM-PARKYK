"""
Django settings for mainapp project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path  # 경로 처리를 위한 pathlib 임포트

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent  # 프로젝트의 최상위 경로


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-ja@yi+7w0v_ur15i^70hh%5hyq)0jtb%0u$vn(z-4lne^^v1c9"  # 장고 비밀키

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # 디버그 모드 활성화

ALLOWED_HOSTS = [
    'localhost',  # 로컬호스트 허용
    '127.0.0.1',  # 루프백 주소 허용
    '192.168.0.18',  # <- 추가된 내부 IP 허용
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",  # 관리자 사이트 앱
    "django.contrib.auth",  # 인증 시스템 앱
    "django.contrib.contenttypes",  # 콘텐츠 타입 프레임워크
    "django.contrib.sessions",  # 세션 프레임워크
    "django.contrib.messages",  # 메시지 프레임워크
    "django.contrib.staticfiles",  # 정적 파일 관리
    "myapp"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",  # 보안 미들웨어
    "django.contrib.sessions.middleware.SessionMiddleware",  # 세션 미들웨어
    "django.middleware.common.CommonMiddleware",  # 일반 미들웨어
    "django.middleware.csrf.CsrfViewMiddleware",  # CSRF 방지 미들웨어: 서버가 특정 문자를 서버로 보내면, 클라이언트는 이를 검증하여 공격을 방지함
    "django.contrib.auth.middleware.AuthenticationMiddleware",  # 인증 미들웨어
    "django.contrib.messages.middleware.MessageMiddleware",  # 메시지 미들웨어
    "django.middleware.clickjacking.XFrameOptionsMiddleware",  # 클릭재킹 방지 미들웨어
]

ROOT_URLCONF = "mainapp.urls"  # URL 설정 파일 지정

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",  # 템플릿 엔진 지정
        "DIRS": [BASE_DIR / 'templates'],  # 템플릿 디렉토리 경로
        "APP_DIRS": True,  # 앱 내 템플릿 사용 여부
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",  # request 객체 전달
                "django.contrib.auth.context_processors.auth",  # 인증 정보 전달
                "django.contrib.messages.context_processors.messages",  # 메시지 전달
            ],
        },
    },
]
STATIC_URL = 'static/'  # 정적 파일 URL 경로
STATICFILES_DIRS = [BASE_DIR / 'static']  # 정적 파일 디렉토리
WSGI_APPLICATION = "mainapp.wsgi.application"  # WSGI 애플리케이션 경로


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",  # 데이터베이스 엔진
        "NAME": "mydb",
        "USER": "root",
        "PASSWORD": "1234",
        "HOST": "localhost",
        "PORT": "3306",
        "OPTIONS":{
            "charset": "utf8mb4",
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",  # 유사성 검사
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",  # 최소 길이 검사
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",  # 일반적인 비밀번호 검사
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",  # 숫자만 포함된 비밀번호 검사
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"  # 언어 코드

TIME_ZONE = "UTC"  # 시간대

USE_I18N = True  # 국제화 사용 여부

USE_TZ = True  # 타임존 사용 여부


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"  # 정적 파일 URL


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"  # 기본 PK
